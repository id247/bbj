/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$bubble-arrow-2-name: 'bubble-arrow-2';
$bubble-arrow-2-x: 320px;
$bubble-arrow-2-y: 103px;
$bubble-arrow-2-offset-x: -320px;
$bubble-arrow-2-offset-y: -103px;
$bubble-arrow-2-width: 9px;
$bubble-arrow-2-height: 21px;
$bubble-arrow-2-total-width: 340px;
$bubble-arrow-2-total-height: 274px;
$bubble-arrow-2-image: '../images/sprite.png';
$bubble-arrow-2: (320px, 103px, -320px, -103px, 9px, 21px, 340px, 274px, '../images/sprite.png', 'bubble-arrow-2', );
$bubble-arrow-name: 'bubble-arrow';
$bubble-arrow-x: 311px;
$bubble-arrow-y: 103px;
$bubble-arrow-offset-x: -311px;
$bubble-arrow-offset-y: -103px;
$bubble-arrow-width: 9px;
$bubble-arrow-height: 21px;
$bubble-arrow-total-width: 340px;
$bubble-arrow-total-height: 274px;
$bubble-arrow-image: '../images/sprite.png';
$bubble-arrow: (311px, 103px, -311px, -103px, 9px, 21px, 340px, 274px, '../images/sprite.png', 'bubble-arrow', );
$docs-name: 'docs';
$docs-x: 184px;
$docs-y: 0px;
$docs-offset-x: -184px;
$docs-offset-y: 0px;
$docs-width: 156px;
$docs-height: 89px;
$docs-total-width: 340px;
$docs-total-height: 274px;
$docs-image: '../images/sprite.png';
$docs: (184px, 0px, -184px, 0px, 156px, 89px, 340px, 274px, '../images/sprite.png', 'docs', );
$logotype-name: 'logotype';
$logotype-x: 163px;
$logotype-y: 103px;
$logotype-offset-x: -163px;
$logotype-offset-y: -103px;
$logotype-width: 148px;
$logotype-height: 52px;
$logotype-total-width: 340px;
$logotype-total-height: 274px;
$logotype-image: '../images/sprite.png';
$logotype: (163px, 103px, -163px, -103px, 148px, 52px, 340px, 274px, '../images/sprite.png', 'logotype', );
$per-30-name: 'per-30';
$per-30-x: 0px;
$per-30-y: 103px;
$per-30-offset-x: 0px;
$per-30-offset-y: -103px;
$per-30-width: 163px;
$per-30-height: 66px;
$per-30-total-width: 340px;
$per-30-total-height: 274px;
$per-30-image: '../images/sprite.png';
$per-30: (0px, 103px, 0px, -103px, 163px, 66px, 340px, 274px, '../images/sprite.png', 'per-30', );
$per-40-name: 'per-40';
$per-40-x: 0px;
$per-40-y: 0px;
$per-40-offset-x: 0px;
$per-40-offset-y: 0px;
$per-40-width: 184px;
$per-40-height: 103px;
$per-40-total-width: 340px;
$per-40-total-height: 274px;
$per-40-image: '../images/sprite.png';
$per-40: (0px, 0px, 0px, 0px, 184px, 103px, 340px, 274px, '../images/sprite.png', 'per-40', );
$per-65-name: 'per-65';
$per-65-x: 0px;
$per-65-y: 169px;
$per-65-offset-x: 0px;
$per-65-offset-y: -169px;
$per-65-width: 132px;
$per-65-height: 67px;
$per-65-total-width: 340px;
$per-65-total-height: 274px;
$per-65-image: '../images/sprite.png';
$per-65: (0px, 169px, 0px, -169px, 132px, 67px, 340px, 274px, '../images/sprite.png', 'per-65', );
$soc-fb-name: 'soc-fb';
$soc-fb-x: 39px;
$soc-fb-y: 236px;
$soc-fb-offset-x: -39px;
$soc-fb-offset-y: -236px;
$soc-fb-width: 39px;
$soc-fb-height: 38px;
$soc-fb-total-width: 340px;
$soc-fb-total-height: 274px;
$soc-fb-image: '../images/sprite.png';
$soc-fb: (39px, 236px, -39px, -236px, 39px, 38px, 340px, 274px, '../images/sprite.png', 'soc-fb', );
$soc-ok-name: 'soc-ok';
$soc-ok-x: 270px;
$soc-ok-y: 169px;
$soc-ok-offset-x: -270px;
$soc-ok-offset-y: -169px;
$soc-ok-width: 39px;
$soc-ok-height: 38px;
$soc-ok-total-width: 340px;
$soc-ok-total-height: 274px;
$soc-ok-image: '../images/sprite.png';
$soc-ok: (270px, 169px, -270px, -169px, 39px, 38px, 340px, 274px, '../images/sprite.png', 'soc-ok', );
$soc-vk-name: 'soc-vk';
$soc-vk-x: 0px;
$soc-vk-y: 236px;
$soc-vk-offset-x: 0px;
$soc-vk-offset-y: -236px;
$soc-vk-width: 39px;
$soc-vk-height: 38px;
$soc-vk-total-width: 340px;
$soc-vk-total-height: 274px;
$soc-vk-image: '../images/sprite.png';
$soc-vk: (0px, 236px, 0px, -236px, 39px, 38px, 340px, 274px, '../images/sprite.png', 'soc-vk', );
$support-1-name: 'support-1';
$support-1-x: 224px;
$support-1-y: 169px;
$support-1-offset-x: -224px;
$support-1-offset-y: -169px;
$support-1-width: 46px;
$support-1-height: 49px;
$support-1-total-width: 340px;
$support-1-total-height: 274px;
$support-1-image: '../images/sprite.png';
$support-1: (224px, 169px, -224px, -169px, 46px, 49px, 340px, 274px, '../images/sprite.png', 'support-1', );
$support-2-name: 'support-2';
$support-2-x: 178px;
$support-2-y: 169px;
$support-2-offset-x: -178px;
$support-2-offset-y: -169px;
$support-2-width: 46px;
$support-2-height: 49px;
$support-2-total-width: 340px;
$support-2-total-height: 274px;
$support-2-image: '../images/sprite.png';
$support-2: (178px, 169px, -178px, -169px, 46px, 49px, 340px, 274px, '../images/sprite.png', 'support-2', );
$support-3-name: 'support-3';
$support-3-x: 132px;
$support-3-y: 169px;
$support-3-offset-x: -132px;
$support-3-offset-y: -169px;
$support-3-width: 46px;
$support-3-height: 49px;
$support-3-total-width: 340px;
$support-3-total-height: 274px;
$support-3-image: '../images/sprite.png';
$support-3: (132px, 169px, -132px, -169px, 46px, 49px, 340px, 274px, '../images/sprite.png', 'support-3', );
$spritesheet-width: 340px;
$spritesheet-height: 274px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($bubble-arrow-2, $bubble-arrow, $docs, $logotype, $per-30, $per-40, $per-65, $soc-fb, $soc-ok, $soc-vk, $support-1, $support-2, $support-3, );
$spritesheet: (340px, 274px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
